#!/usr/bin/env bash

alias c='clear'
alias sz='source ~/.zshrc'
alias source-bash='source ~/.bashrc'
alias ff="fastfetch"
alias bsh='exec bash -l'
alias wh='which'
alias ..='cd ..'
alias cp='cp --interactive'
alias mv='mv --interactive'
alias rm='rm --interactive'
alias less='less --quiet'
alias df='df --human-readable'
alias du='du --human-readable'
alias ls='exa --group-directories-first --icons'
alias la='ls -a'
alias ll='ls -l'
alias lla='ls -la'
alias ldot='ls -ld .*'
alias untar='tar xvf'
alias t-down="sudo tailscale down && sudo systemctl restart autofs.service"
alias t-up="sudo tailscale up"
alias ip4='ip -br -c -4 a'
alias ip6='ip -br -c -6 a'
alias mon-ip="curl -s ifconfig.me | grep -Eo '([0-9]{1,3}\.){3}[0-9]{1,3}'"
alias line-count="find . -type f ! -path '*/.git/*' | xargs cat | wc -l"
alias olm="docker exec -it ollama ollama"
alias rkb-db-connect-prod="rainfrog --username postgres --database rkb_db --host 192.168.100.6 --port 5432 --driver postgres --password $RKB_DB_PASSWORD"
alias rkb-db-connect-local="rainfrog --username postgres --database rkb_db --host localhost --port 5432 --driver postgres --password $RKB_DB_PASSWORD"

alias vim=nvim

# obsidian/notes
alias td="note.sh todo"
alias oh="note.sh home"
alias or="note.sh inbox"
alias on="note.sh new"
alias oj="note.sh journal"
alias ow="note.sh dailies"
alias oq="note.sh quick-switch"
alias os="note.sh grep"
alias ot="note.sh new-from-template"
alias oa="note.sh search-by-tags"

alias pkglist="rm -f ~/Projets/paclist.txt && paru -Qqe > ~/Projets/paclist.txt"
alias bkp="~/.local/bin/btrfs-backup.sh"
alias etc-bkp="sudo tar -czf ~/Projets/etc/etc_backup-$(date +%F).tar.gz /etc"

alias t="tmux attach || tmux new -s $(uname --nodename)"
alias tn='export TMUX_SESSION_NAME="$(date +%d%H%M%S)" && tmux new-session -d -s "$TMUX_SESSION_NAME" && tmux switch-client -t "$TMUX_SESSION_NAME"'
alias ta="tmux attach"
alias tl="tmux ls"
alias ts="tmux attach -t"

alias z="zellij attach || zellij"
alias za="zellij attach"
alias zl="zellij list-sessions"
alias zs="zellij --session"

alias date-computer='date +"%Y-%m-%d_%H:%M:%S"'
alias date-human='date +"%A %d %B %Y, %H:%M"'

# docker
alias lzd="lazydocker"

# git
alias lzg="lazygit"
alias g="git status"
alias ga="git add"
alias gaa="git add ."
alias gau="git add -u"
alias gc="git commit -m"
alias gca="git commit -am"
alias gb="git branch"
alias gbd="git branch -d"
alias gco="git checkout"
alias gcob="git checkout -b"
alias gt="git stash"
alias gta="git stash apply"
alias gm="git merge"
alias gr="git rebase"
alias gl="git log --oneline --decorate --graph"
alias glog="git log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --"
alias glga="git log --graph --oneline --all --decorate"
alias gs="git show"
alias gd="diff --color --color-words --abbrev"
alias gdc="git diff --cached"
alias gbl="git blame"
alias gps="git push"
alias gpl="git pull"
alias gk="gitk --all&"
alias gx="gitx --all"
alias grmc="git rm -r --cached"

# swap esc & caps lock (Xorg)
# alias se="setxkbmap -option caps:swapescape"
# alias sb="setxkbmap -option"

# Python
# alias venv-mk="python3 -m venv venv"
# alias vmk="venv-mk"
alias venv-activate="source .venv/bin/activate"
alias va="venv-activate"

# pbcopy/paste like (Xorg)
# alias cbcopy='xsel --clipboard --input'
# alias cbpaste='xsel --clipboard --output'

alias copy="wl-copy"
alias paste="wl-paste"

# Gestion des paquets
# up                            Mise à jour complète
# install foo                   Installer un paquet
# uninstall foo                 Supprimer un paquet
# purge foo (APT uniquement)    Supprimer + config
# search foo                    Rechercher un paquet
# list                          Lister tous les paquets installés
# list_explicit                 Paquets installés manuellement
# list_aur (Arch seulement)     AUR manuels
# clean                         Nettoyage complet du système
if command -v paru >/dev/null 2>&1; then
    PKG_MGR="paru"
    IS_ARCH=true
elif command -v apt >/dev/null 2>&1; then
    PKG_MGR="apt"
    IS_ARCH=false
else
    echo "Aucun gestionnaire de paquets reconnu." >&2
    return
fi

pkg_up() {
    if [ "$IS_ARCH" = true ]; then
        paru
    else
        sudo apt update && sudo apt upgrade && sudo apt dist-upgrade
        sudo apt autoremove && sudo apt autoclean && sudo apt clean
        command -v flatpak >/dev/null && flatpak update
    fi
}

pkg_install() {
    if [ -z "$1" ]; then
        echo "Usage: install <package>"
        return 1
    fi

    if [ "$IS_ARCH" = true ]; then
        paru -S "$@"
    else
        sudo apt install "$@"
    fi
}

pkg_uninstall() {
    if [ -z "$1" ]; then
        echo "Usage: uninstall <package>"
        return 1
    fi

    if [ "$IS_ARCH" = true ]; then
        paru -Rs "$@"
    else
        sudo apt remove "$@"
    fi
}

pkg_purge() {
    if [ "$IS_ARCH" = true ]; then
        echo "Pas d'équivalent direct à 'purge' avec pacman. Utiliser uninstall ou gérer manuellement les fichiers de config."
    else
        sudo apt purge "$@"
    fi
}

pkg_search() {
    if [ -z "$1" ]; then
        echo "Usage: search <package>"
        return 1
    fi

    if [ "$IS_ARCH" = true ]; then
        paru -Ss "$@"
    else
        apt search "$@"
    fi
}

pkg_list() {
    if [ "$IS_ARCH" = true ]; then
        pacman -Q
    else
        apt list --installed
    fi
}

pkg_list_explicit() {
    if [ "$IS_ARCH" = true ]; then
        pacman -Qe
    else
        echo "APT ne fait pas de distinction explicite par défaut. Utilise 'apt-mark showmanual'."
        apt-mark showmanual
    fi
}

pkg_list_aur() {
    if [ "$IS_ARCH" = true ]; then
        pacman -Qem
    else
        echo "Pas de support AUR sur ce système."
    fi
}

pkg_clean() {
    if [ "$IS_ARCH" = true ]; then
        sudo pacman -Sc
    else
        sudo apt autoremove && sudo apt autoclean && sudo apt clean
    fi
}

# alias up="pu"
# # Pacman
# alias pu='paru'
# alias pi='paru -Si'         #   install
# alias pr='paru -Rs'         #   remove
# alias pl='pacman -Q'        #   list installed
# alias ple='pacman -Qe'      #   list explicitly installed
# alias pla='pacman -Qem'     #   list explicitly installed packages from the AUR
# alias pc='sudo pacman -Scc' #   clean cache
#
# # Apt
# alias au='sudo apt update && sudo apt upgrade && sudo apt dist-upgrade && sudo apt autoremove && sudo apt autoclean && sudo apt clean && flatpak update'
# alias ai="sudo apt install"
# alias ap="sudo apt purge"
# alias ar="sudo apt remove"
# alias as="apt search"

# Flatpak
alias fp='flatpak'
