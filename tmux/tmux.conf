# ctrl+space as leader key
unbind-key C-b
set-option -g prefix C-Space
bind-key C-Space send-prefix

# better defaults
set-option -g base-index 1
set -g renumber-windows on
set -g allow-passthrough on

# vim keys
setw -g mode-keys vi

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# force 24 bit colors
set -g default-terminal "tmux-256color"
set -sa terminal-overrides ',xterm-256color:Tc'
set -sa terminal-features ',xterm*:clipboard:ccolour:cstyle:hyperlinks:focus:title'

# limit history to 10000 lines
set -g history-limit 10000
bind-key v run-shell 'tmux capture-pane -S -10000 \; save-buffer /tmp/tmux-backlog.txt \; delete-buffer \; new-window nvim /tmp/tmux-backlog.txt'

# fix windows title
set -g set-titles on
set -g set-titles-string "#T"

# More friendly split pane
bind-key - split-window -v
bind-key \\ split-window -h

# Session switcher with sesh
bind-key o new-window 'session=$(sesh list | fzf --height=90% --layout=reverse --border --border-label " sesh " ) && sesh connect "$session" || read'

# Enable mouse support
set -g mouse on

# status bar position
set -g status-position top

set-option -g status-style bg=default
set-option -g status-style fg=#4c566a

set -g pane-border-style fg=#3b4252
set -g pane-active-border-style fg=#4c566a

# Change the border characters
set -g pane-border-lines single       # heavy, single, double, simple, number
set -g pane-border-status off       # off, top, bottom (shows pane title)

# Format de la barre de statut pour les fenêtres inactives
setw -g window-status-format " #W"

# Format de la barre de statut pour la fenêtre active
setw -g window-status-current-format " #[fg=green]#W#[default]"

# set -g status-left " "
set -g status-left ""
set -g status-right "#[fg=magenta]#S"
